Index: Store/DBStoreManager.cpp
===================================================================
RCS file: /var/lib/cvs/szbd/Store/DBStoreManager.cpp,v
retrieving revision 1.94
diff -u -r1.94 DBStoreManager.cpp
--- Store/DBStoreManager.cpp	23 May 2007 21:59:08 -0000	1.94
+++ Store/DBStoreManager.cpp	12 Jun 2007 17:45:27 -0000
@@ -165,7 +165,8 @@
 		if (map->equal(p_id, map->RIP))
 		{
 			*ec << "Store::Manager::getObject failed: Object not found\n(brak ustalonego kodu bledu dla tej operacji, default -> return 2;";
-			return 2;	
+			object = NULL;
+			return 0;	
 		}
 
 		PagePointer *pPtr = buffer->getPagePointer(p_id->file_id, p_id->page_id);
Index: TransactionManager/Transaction.h
===================================================================
RCS file: /var/lib/cvs/szbd/TransactionManager/Transaction.h,v
retrieving revision 1.39
diff -u -r1.39 Transaction.h
--- TransactionManager/Transaction.h	8 Apr 2007 21:38:06 -0000	1.39
+++ TransactionManager/Transaction.h	12 Jun 2007 17:45:27 -0000
@@ -2,7 +2,7 @@
 #define _TRANSACTION_
 
 /**
- *	@author Julian Krzemi�ski (julian.krzeminski@students.mimuw.edu.pl)
+ *	@author Julian Krzemi�ski (julian.krzeminski@students.mimuw.edu.pl)
  *	@author Dominik Klimczak (dominik.klimczak@students.mimuw.edu.pl)
  */
 namespace TManager
@@ -76,8 +76,8 @@
 		    	~Transaction();
 	    	
 	     	 	/* Executor calls: */
-		    	int getObjectPointer(LogicalID* lid, AccessMode mode, ObjectPointer* &p);
-			int modifyObject(ObjectPointer* &op, DataValue* dv);
+		    	int getObjectPointer(LogicalID* lid, AccessMode mode, ObjectPointer* &p, bool allowNullObject);
+				int modifyObject(ObjectPointer* &op, DataValue* dv);
 		    	int createObject(string name, DataValue* value, ObjectPointer* &p);
 		    	int deleteObject(ObjectPointer* object);
 		    
Index: TransactionManager/Transaction.cpp
===================================================================
RCS file: /var/lib/cvs/szbd/TransactionManager/Transaction.cpp,v
retrieving revision 1.66
diff -u -r1.66 Transaction.cpp
--- TransactionManager/Transaction.cpp	8 Apr 2007 21:38:06 -0000	1.66
+++ TransactionManager/Transaction.cpp	12 Jun 2007 17:45:27 -0000
@@ -2,7 +2,7 @@
 #include "Transaction.h"
 
 /**
- *	@author Julian Krzemi�ski (julian.krzeminski@students.mimuw.edu.pl)
+ *	@author Julian Krzemi�ski (julian.krzeminski@students.mimuw.edu.pl)
  *	@author Dominik Klimczak (dominik.klimczak@students.mimuw.edu.pl)
  */
 namespace TManager
@@ -60,7 +60,7 @@
 		return errorNumer;
 	}
 				
-	int Transaction::getObjectPointer(LogicalID* lid, AccessMode mode, ObjectPointer* &p)
+	int Transaction::getObjectPointer(LogicalID* lid, AccessMode mode, ObjectPointer* &p, bool allowNullObject)
 	{
 		int errorNumber;
 	
@@ -77,6 +77,11 @@
 		}
 		
 		if (errorNumber) abort();
+		
+		if (p == NULL && !allowNullObject) {
+			err.printf("Transaction: %d getObjectPointer, object doesn't exist while we expect existing object\n");
+			abort();
+		} 
     
 		return errorNumber; 
 	}
Index: QueryParser/DataRead.cpp
===================================================================
RCS file: /var/lib/cvs/szbd/QueryParser/DataRead.cpp,v
retrieving revision 1.26
diff -u -r1.26 DataRead.cpp
--- QueryParser/DataRead.cpp	18 May 2007 22:57:24 -0000	1.26
+++ QueryParser/DataRead.cpp	12 Jun 2007 17:45:26 -0000
@@ -107,7 +107,7 @@
     for (unsigned   int j = 0; j < v->size(); j++){
         // czy acces mode sie robi w ten sposob?
 	ObjectPointer *op = NULL;
-	tr->getObjectPointer( (*v)[j], Store::Read, op);
+	tr->getObjectPointer( (*v)[j], Store::Read, op, false);
 //	cerr << " wczytal " << op->getName() << "---------------------" << endl;
         // moze tak nie mozna porownywac getName zwraca stringa **
         if (op->getName() == "name"){
@@ -127,21 +127,21 @@
 	    datObDef->setOwnerId(op->getValue()->getPointer()->toInteger());
     //	    tr->getObjectPointer( (*v)[j], Store::Read, op);
 	    ObjectPointer * pom;
-	    tr->getObjectPointer(op->getValue()->getPointer(), Store::Read, pom);
+	    tr->getObjectPointer(op->getValue()->getPointer(), Store::Read, pom, false);
 //	    cout << "spodziewam sie, ze w nas linii napisze ze dany obiekt jest juz wczytany " << endl;
 	    datObDef->setOwner(this->createDataObjectDef(pom, tr));
 	} else if (op->getName() == "target") {
 //	    cout << "WAZNE wczytal target " << op->getValue()->getPointer()->toInteger();
 	    datObDef->setTargetId(op->getValue()->getPointer()->toInteger());
 	    ObjectPointer * pom;
-	    tr->getObjectPointer(op->getValue()->getPointer(), Store::Read, pom);
+	    tr->getObjectPointer(op->getValue()->getPointer(), Store::Read, pom, false);
 	    datObDef->setTarget(this->createDataObjectDef(pom, tr));
 	} else if (op->getName() == "subobject") {				// czy to jest link??? chyba tak 
 //	    cerr << "WAZNE wczytal subobject " << endl;				// tak samo jak owner i target
 //	    cerr << "to chyba nie to id/ a jednak moze to " << op->getLogicalID()->toInteger();
 //	    cerr << "to chyba dobre id " << op->getValue()->getPointer()->toInteger() << endl;
 	    ObjectPointer * pom;
-	    tr->getObjectPointer(op->getLogicalID(), Store::Read, pom);
+	    tr->getObjectPointer(op->getLogicalID(), Store::Read, pom, false);
 //	    cerr << "wola rek " << endl;
 	    DataObjectDef * subobj = this->createDataObjectDef(pom, tr);	    
 	    if (subobj->getOwner() == datObDef){
Index: QueryExecutor/QueryExecutor.cpp
===================================================================
RCS file: /var/lib/cvs/szbd/QueryExecutor/QueryExecutor.cpp,v
retrieving revision 1.187
diff -u -r1.187 QueryExecutor.cpp
--- QueryExecutor/QueryExecutor.cpp	26 Apr 2007 13:32:16 -0000	1.187
+++ QueryExecutor/QueryExecutor.cpp	12 Jun 2007 17:45:26 -0000
@@ -548,7 +548,7 @@
 			}
 			
 			ObjectPointer *optr;
-			errcode = tr->getObjectPointer (((QueryReferenceResult*)execution_result)->getValue(), Store::Read, optr);
+			errcode = tr->getObjectPointer (((QueryReferenceResult*)execution_result)->getValue(), Store::Read, optr, false);
 			if (errcode != 0) {
 				*ec << "[QE] register proc operation - Error in getObjectPointer.";
 				antyStarveFunction(errcode);
@@ -662,7 +662,7 @@
 				return ErrQExecutor | ERefExpected;
 			}
 			LogicalID* lid = ((QueryReferenceResult*)execution_result)->getValue();	
-			errcode = tr->getObjectPointer (lid, Store::Read, optr);
+			errcode = tr->getObjectPointer (lid, Store::Read, optr, false);
 			if (errcode != 0) {
 				*ec << "[QE] view creating operation - Error in getObjectPointer.";
 				antyStarveFunction(errcode);
@@ -699,7 +699,7 @@
 					return ErrQExecutor | ERefExpected;
 				}
 				lid = ((QueryReferenceResult*)execution_result)->getValue();
-				errcode = tr->getObjectPointer (lid, Store::Read, optr);
+				errcode = tr->getObjectPointer (lid, Store::Read, optr, false);
 				if (errcode != 0) {
 					*ec << "[QE] view creating operation - Error in getObjectPointer.";
 					antyStarveFunction(errcode);
@@ -785,7 +785,7 @@
 			}
 			
 			ObjectPointer *optr;
-			errcode = tr->getObjectPointer (((QueryReferenceResult*)execution_result)->getValue(), Store::Read, optr);
+			errcode = tr->getObjectPointer (((QueryReferenceResult*)execution_result)->getValue(), Store::Read, optr, false);
 			if (errcode != 0) {
 				*ec << "[QE] register view operation - Error in getObjectPointer.";
 				antyStarveFunction(errcode);
@@ -805,7 +805,7 @@
 			vector<LogicalID*>* inner_vec = (optr->getValue())->getVector();
 			for (unsigned int i=0; i < inner_vec->size(); i++) {
 				ObjectPointer *inner_optr;
-				errcode = tr->getObjectPointer (inner_vec->at(i), Store::Read, inner_optr);
+				errcode = tr->getObjectPointer (inner_vec->at(i), Store::Read, inner_optr, false);
 				if (errcode != 0) {
 					*ec << "[QE] register view operation - Error in getObjectPointer.";
 					antyStarveFunction(errcode);
@@ -1637,7 +1637,7 @@
 			LogicalID *ref_value = ((QueryReferenceResult *) arg)->getValue();
 			*ec << "[QE] derefQuery() - dereferencing Object";
 			ObjectPointer *optr;
-			errcode = tr->getObjectPointer(ref_value, Store::Read, optr); 
+			errcode = tr->getObjectPointer(ref_value, Store::Read, optr, true); 
 			if (errcode != 0) {
 				*ec << "[QE] Error in getObjectPointer";
 				antyStarveFunction(errcode);
@@ -1645,6 +1645,11 @@
 				return errcode;
 			}
 			
+			if (optr == NULL) {
+				res = new QueryBagResult();
+				break;
+			} 
+			
 			if (optr->isRoot()) {
 			    string object_name = optr->getName();
 			    if (!system_privilige_checking && 
@@ -1694,7 +1699,7 @@
 					for (int i = 0; i < tmp_vec_size; i++) {
 						LogicalID *currID = tmp_vec->at(i);
 						ObjectPointer *currOptr;
-						errcode = tr->getObjectPointer(currID, Store::Read, currOptr); 
+						errcode = tr->getObjectPointer(currID, Store::Read, currOptr, false); 
 						if (errcode != 0) {
 							*ec << "[QE] Error in getObjectPointer";
 							antyStarveFunction(errcode);
@@ -1964,7 +1969,7 @@
             LogicalID *ref_value = ((QueryReferenceResult *) arg)->getValue();
             *ec << "[QE] nameof() - dereferencing Object";
             ObjectPointer *optr;
-            errcode = tr->getObjectPointer(ref_value, Store::Read, optr); 
+            errcode = tr->getObjectPointer(ref_value, Store::Read, optr, true); 
             if (errcode != 0) {
                 *ec << "[QE] Error in getObjectPointer";
                 antyStarveFunction(errcode);
@@ -1972,6 +1977,11 @@
                 return errcode;
             }
             
+            if (optr == NULL) {
+        		res = new QueryBagResult();
+        		break;
+            }
+            
             if (optr->isRoot()) {
                 string object_name = optr->getName();
                 if (!system_privilige_checking && 
@@ -2338,12 +2348,17 @@
 				if (toDeleteType == QueryResult::QREFERENCE) {
 					LogicalID *lid = ((QueryReferenceResult *) toDelete)->getValue();
 					ObjectPointer *optr;
-					if ((errcode = tr->getObjectPointer (lid, Store::Write, optr)) !=0) { 
+					if ((errcode = tr->getObjectPointer (lid, Store::Write, optr, true)) !=0) { 
 						*ec << "[QE] Error in getObjectPointer.";
 						antyStarveFunction(errcode);
 						inTransaction = false;
 						return errcode;
 					}
+					
+					if (optr == NULL) {
+						continue;
+					}
+					
 					if (optr->getIsRoot()) {
 						string object_name = optr->getName();
 						if (!system_privilige_checking && 
@@ -2710,7 +2725,7 @@
 		}
 		LogicalID *lidOut = ((QueryReferenceResult *) outer)->getValue();
 		ObjectPointer *optrOut;
-		errcode = tr->getObjectPointer (lidOut, Store::Write, optrOut); 
+		errcode = tr->getObjectPointer (lidOut, Store::Write, optrOut, false); 
 		if (errcode != 0) {
 			*ec << "[QE] insert operation - Error in getObjectPointer.";
 			antyStarveFunction(errcode);
@@ -2758,13 +2773,16 @@
 			switch (rightResultType) {
 				case QueryResult::QREFERENCE: {
 					lidIn = ((QueryReferenceResult *) toInsert)->getValue();
-					errcode = tr->getObjectPointer (lidIn, Store::Write, optrIn); 
+					errcode = tr->getObjectPointer (lidIn, Store::Write, optrIn, true); 
 					if (errcode != 0) {
 						*ec << "[QE] insert operation - Error in getObjectPointer.";
 						antyStarveFunction(errcode);
 						inTransaction = false;
 						return errcode;
 					}
+					if (optrIn == NULL) {
+						break;
+					}
 					string object_name = optrIn->getName();
 					/*if (!system_privilige_checking && 
 							assert_privilige(Privilige::MODIFY_PRIV, object_name) == false) {
@@ -2876,7 +2894,7 @@
 		else {
 			LogicalID *old_lid = ((QueryReferenceResult *) lArg)->getValue();
 			ObjectPointer *old_optr;
-			errcode = tr->getObjectPointer (old_lid, Store::Write, old_optr); 
+			errcode = tr->getObjectPointer (old_lid, Store::Write, old_optr, false); 
 			if (errcode != 0) {
 				*ec << "[QE] operator <assign>: error in getObjectPointer()";
 				antyStarveFunction(errcode);
@@ -2968,7 +2986,7 @@
 				if (errcode != 0) return errcode;
 				LogicalID *rArg_lid = ((QueryReferenceResult *)rArg_ref)->getValue();
 				ObjectPointer *rArg_optr;
-				errcode = tr->getObjectPointer (rArg_lid, Store::Read, rArg_optr); 
+				errcode = tr->getObjectPointer (rArg_lid, Store::Read, rArg_optr, false); 
 				if (errcode != 0) {
 					*ec << "[QE] operator <assign>: error in getObjectPointer()";
 					antyStarveFunction(errcode);
@@ -3341,7 +3359,7 @@
 	int errcode;
 	ObjectPointer *optr;
 	
-	errcode = tr->getObjectPointer (lid, Store::Read, optr); 
+	errcode = tr->getObjectPointer (lid, Store::Read, optr, false); 
 	if (errcode != 0) {
 		*ec << "[QE] procCheck - Error in getObjectPointer.";
 		antyStarveFunction(errcode);
@@ -3365,7 +3383,7 @@
 		for (int i = 0; i < vec_size; i++ ) {
 			LogicalID *tmp_logID = tmp_vec->at(i);
 			ObjectPointer *tmp_optr;
-			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr)) != 0) {
+			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr, false)) != 0) {
 				*ec << "[QE] procCheck - Error in getObjectPointer";
 				antyStarveFunction(errcode);
 				inTransaction = false;
@@ -3406,7 +3424,7 @@
 	string actual_name = "";
 	int actual_name_count = 0;
 	ObjectPointer *optr;
-	errcode = tr->getObjectPointer (lid, Store::Read, optr);
+	errcode = tr->getObjectPointer (lid, Store::Read, optr, false);
 	if (errcode != 0) {
 		*ec << "[QE] checkViewAndGetVirtuals - Error in getObjectPointer.";
 		antyStarveFunction(errcode);
@@ -3423,7 +3441,7 @@
 		for (int i = 0; i < vec_size; i++ ) {
 			LogicalID *tmp_logID = tmp_vec->at(i);
 			ObjectPointer *tmp_optr;
-			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr)) != 0) {
+			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr, false)) != 0) {
 				*ec << "[QE] checkViewAndGetVirtuals - Error in getObjectPointer";
 				antyStarveFunction(errcode);
 				inTransaction = false;
@@ -3461,7 +3479,7 @@
 		for (int i = 0; i < vec_copy_size; i++) {
 			LogicalID *tmp_logID = tmp_vec_copy.at(i);
 			ObjectPointer *tmp_optr;
-			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr)) != 0) {
+			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr, false)) != 0) {
 				*ec << "[QE] checkViewAndGetVirtuals - Error in getObjectPointer";
 				antyStarveFunction(errcode);
 				inTransaction = false;
@@ -3482,7 +3500,7 @@
 					}
 					LogicalID *proc_code_lid = tmp_vec_inner->at(0);
 					ObjectPointer *proc_code_optr;
-					if ((errcode = tr->getObjectPointer(proc_code_lid, Store::Read, proc_code_optr)) != 0) {
+					if ((errcode = tr->getObjectPointer(proc_code_lid, Store::Read, proc_code_optr, false)) != 0) {
 						*ec << "[QE] checkViewAndGetVirtuals - Error in getObjectPointer";
 						antyStarveFunction(errcode);
 						inTransaction = false;
@@ -3532,7 +3550,7 @@
 int QueryExecutor::getSubviews(LogicalID *lid, string vo_name, vector<LogicalID *> &subviews, vector<LogicalID *> &others) {
 	int errcode;
 	ObjectPointer *optr;
-	errcode = tr->getObjectPointer (lid, Store::Read, optr);
+	errcode = tr->getObjectPointer (lid, Store::Read, optr, false);
 	if (errcode != 0) {
 		*ec << "[QE] getSubviews - Error in getObjectPointer.";
 		antyStarveFunction(errcode);
@@ -3548,7 +3566,7 @@
 		for (int i = 0; i < vec_size; i++ ) {
 			LogicalID *tmp_logID = tmp_vec->at(i);
 			ObjectPointer *tmp_optr;
-			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr)) != 0) {
+			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr, false)) != 0) {
 				*ec << "[QE] getSubviews - Error in getObjectPointer";
 				antyStarveFunction(errcode);
 				inTransaction = false;
@@ -3581,7 +3599,7 @@
 	param = "";
 	int errcode;
 	ObjectPointer *optr;
-	errcode = tr->getObjectPointer (lid, Store::Read, optr);
+	errcode = tr->getObjectPointer (lid, Store::Read, optr, false);
 	if (errcode != 0) {
 		*ec << "[QE] getOn_procedure - Error in getObjectPointer.";
 		antyStarveFunction(errcode);
@@ -3598,7 +3616,7 @@
 		for (int i = 0; i < vec_size; i++ ) {
 			LogicalID *tmp_logID = tmp_vec->at(i);
 			ObjectPointer *tmp_optr;
-			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr)) != 0) {
+			if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr, false)) != 0) {
 				*ec << "[QE] getOn_procedure - Error in getObjectPointer";
 				antyStarveFunction(errcode);
 				inTransaction = false;
@@ -3619,7 +3637,7 @@
 				}
 				LogicalID *first_logID = proc_vec->at(0);
 				ObjectPointer *first_optr;
-				if ((errcode = tr->getObjectPointer(first_logID, Store::Read, first_optr)) != 0) {
+				if ((errcode = tr->getObjectPointer(first_logID, Store::Read, first_optr, false)) != 0) {
 					*ec << "[QE] getOn_procedure - Error in getObjectPointer";
 					antyStarveFunction(errcode);
 					inTransaction = false;
@@ -3644,7 +3662,7 @@
 				if (proc_vec_size == 2) {
 					LogicalID *second_logID = proc_vec->at(1);
 					ObjectPointer *second_optr;
-					if ((errcode = tr->getObjectPointer(second_logID, Store::Read, second_optr)) != 0) {
+					if ((errcode = tr->getObjectPointer(second_logID, Store::Read, second_optr, false)) != 0) {
 						*ec << "[QE] getOn_procedure - Error in getObjectPointer";
 						antyStarveFunction(errcode);
 						inTransaction = false;
Index: QueryExecutor/EnvironmentStack.cpp
===================================================================
RCS file: /var/lib/cvs/szbd/QueryExecutor/EnvironmentStack.cpp,v
retrieving revision 1.17
diff -u -r1.17 EnvironmentStack.cpp
--- QueryExecutor/EnvironmentStack.cpp	26 Apr 2007 13:32:16 -0000	1.17
+++ QueryExecutor/EnvironmentStack.cpp	12 Jun 2007 17:45:22 -0000
@@ -385,7 +385,7 @@
 	
 	ObjectPointer *optr;
 	if (value != NULL) {
-		if ((errcode = tr->getObjectPointer(value, Store::Read, optr)) != 0) {
+		if ((errcode = tr->getObjectPointer(value, Store::Read, optr, false)) != 0) {
 			*ec << "[QE] Error in getObjectPointer";
 			qe->antyStarveFunction(errcode);
 			qe->inTransaction = false;
@@ -406,7 +406,7 @@
 			 DataValue* value;
 			 for (int i = 0; i < vec_size; i++ ) {
 				 LogicalID *tmp_logID = tmp_vec->at(i);
-				 if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, optr)) != 0) {
+				 if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, optr, false)) != 0) {
 					*ec << "[QE] Error in getObjectPointer";
 					qe->antyStarveFunction(errcode);
 					qe->inTransaction = false;
@@ -457,7 +457,7 @@
 			}
 			case Store::Pointer: {
 				LogicalID *tmp_logID = (tmp_data_value->getPointer());
-				if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, optr)) != 0) {
+				if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, optr, false)) != 0) {
 					*ec << "[QE] Error in getObjectPointer";
 					qe->antyStarveFunction(errcode);
 					qe->inTransaction = false;
@@ -477,7 +477,7 @@
 				int vec_size = tmp_vec->size();
 				for (int i = 0; i < vec_size; i++ ) {
 					LogicalID *tmp_logID = tmp_vec->at(i);
-					if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, optr)) != 0) {
+					if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, optr, false)) != 0) {
 						*ec << "[QE] Error in getObjectPointer";
 						qe->antyStarveFunction(errcode);
 						qe->inTransaction = false;
@@ -549,7 +549,7 @@
 	for (unsigned int i = 0; i < others.size(); i++ ) {
 		LogicalID *tmp_logID = others.at(i);
 		ObjectPointer *tmp_optr;
-		if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr)) != 0) {
+		if ((errcode = tr->getObjectPointer(tmp_logID, Store::Read, tmp_optr, false)) != 0) {
 			*ec << "[QE] Error in getObjectPointer";
 			qe->antyStarveFunction(errcode);
 			qe->inTransaction = false;
