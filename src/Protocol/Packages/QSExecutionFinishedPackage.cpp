/* This file is generated by lw_protogen. DO NOT EDIT.*/
#include <string>
#include <sstream>
#include <Protocol/Enums/DataPackages.h>
#include <Protocol/DataPackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/PackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/Packages/QSExecutionFinishedPackage.h>

using namespace std;

namespace Protocol {
	QSExecutionFinishedPackage::QSExecutionFinishedPackage(const sigset_t &mask, const bool &cancel, size_t &length, DataStream &stream):

		modAtomPointerCnt(stream.read_varuint(mask, cancel, length)),
		delCnt(stream.read_varuint(mask, cancel, length)),
		newRootsCnt(stream.read_varuint(mask, cancel, length)),
		insertsCnt(stream.read_varuint(mask, cancel, length))
	{
	}

	QSExecutionFinishedPackage::QSExecutionFinishedPackage(VarUint modAtomPointerCnt, VarUint delCnt, VarUint newRootsCnt, VarUint insertsCnt):

		modAtomPointerCnt(modAtomPointerCnt),
		delCnt(delCnt),
		newRootsCnt(newRootsCnt),
		insertsCnt(insertsCnt)
	{
	}

	void QSExecutionFinishedPackage::serialize(const sigset_t &mask, const bool& cancel, DataStream &stream, bool with_header) const
	{
		if (with_header){
			stream.write_uint8(mask, cancel, get_type());
			stream.write_uint32(mask, cancel, get_ser_size());
		}
		stream.write_varuint(mask, cancel, modAtomPointerCnt);
		stream.write_varuint(mask, cancel, delCnt);
		stream.write_varuint(mask, cancel, newRootsCnt);
		stream.write_varuint(mask, cancel, insertsCnt);
	}

	uint8_t QSExecutionFinishedPackage::get_type() const
	{
		return Q_S_EXECUTION_FINISHED_PACKAGE;
	}

	string QSExecutionFinishedPackage::to_string() const
	{
		stringstream ss;
		ss << "QSExecutionFinishedPackage:" << endl;
		ss << "  modAtomPointerCnt: " << (modAtomPointerCnt.is_null()?0:modAtomPointerCnt.get_val()) << endl;
		ss << "  delCnt: " << (delCnt.is_null()?0:delCnt.get_val()) << endl;
		ss << "  newRootsCnt: " << (newRootsCnt.is_null()?0:newRootsCnt.get_val()) << endl;
		ss << "  insertsCnt: " << (insertsCnt.is_null()?0:insertsCnt.get_val()) << endl;
		return ss.str();
	}

	size_t QSExecutionFinishedPackage::get_ser_size() const
	{
		return 0 + DataStream::get_varuint_size(modAtomPointerCnt) + DataStream::get_varuint_size(delCnt) + DataStream::get_varuint_size(newRootsCnt) + DataStream::get_varuint_size(insertsCnt);
	}

	VarUint QSExecutionFinishedPackage::get_val_modAtomPointerCnt() const
	{
		return modAtomPointerCnt;
	}
	VarUint QSExecutionFinishedPackage::get_val_delCnt() const
	{
		return delCnt;
	}
	VarUint QSExecutionFinishedPackage::get_val_newRootsCnt() const
	{
		return newRootsCnt;
	}
	VarUint QSExecutionFinishedPackage::get_val_insertsCnt() const
	{
		return insertsCnt;
	}
}
