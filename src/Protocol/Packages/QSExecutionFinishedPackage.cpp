/* This file is generated by lw_protogen. DO NOT EDIT.*/
#include <string>
#include <sstream>
#include <Protocol/Enums/DataPackages.h>
#include <Protocol/DataPackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/PackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/Packages/QSExecutionFinishedPackage.h>

using namespace std;

namespace Protocol {
	QSExecutionFinishedPackage::QSExecutionFinishedPackage(const sigset_t &mask, const bool &cancel, size_t &length, DataStream &stream):

		mod_atom_pointer_cnt(stream.read_varuint(mask, cancel, length)),
		del_cnt(stream.read_varuint(mask, cancel, length)),
		new_roots_cnt(stream.read_varuint(mask, cancel, length)),
		inserts_cnt(stream.read_varuint(mask, cancel, length))
	{
	}

	QSExecutionFinishedPackage::QSExecutionFinishedPackage(VarUint mod_atom_pointer_cnt, VarUint del_cnt, VarUint new_roots_cnt, VarUint inserts_cnt):

		mod_atom_pointer_cnt(mod_atom_pointer_cnt),
		del_cnt(del_cnt),
		new_roots_cnt(new_roots_cnt),
		inserts_cnt(inserts_cnt)
	{
	}

	void QSExecutionFinishedPackage::serialize(const sigset_t &mask, const bool& cancel, DataStream &stream, bool with_header) const
	{
		if (with_header){
			stream.write_uint8(mask, cancel, get_type());
			stream.write_uint32(mask, cancel, get_ser_size());
		}
		stream.write_varuint(mask, cancel, mod_atom_pointer_cnt);
		stream.write_varuint(mask, cancel, del_cnt);
		stream.write_varuint(mask, cancel, new_roots_cnt);
		stream.write_varuint(mask, cancel, inserts_cnt);
	}

	uint8_t QSExecutionFinishedPackage::get_type() const
	{
		return Q_S_EXECUTION_FINISHED_PACKAGE;
	}

	string QSExecutionFinishedPackage::to_string() const
	{
		stringstream ss;
		ss << "QSExecutionFinishedPackage:" << endl;
		ss << "  mod_atom_pointer_cnt: " << (mod_atom_pointer_cnt.is_null()?0:mod_atom_pointer_cnt.get_val()) << endl;
		ss << "  del_cnt: " << (del_cnt.is_null()?0:del_cnt.get_val()) << endl;
		ss << "  new_roots_cnt: " << (new_roots_cnt.is_null()?0:new_roots_cnt.get_val()) << endl;
		ss << "  inserts_cnt: " << (inserts_cnt.is_null()?0:inserts_cnt.get_val()) << endl;
		return ss.str();
	}

	size_t QSExecutionFinishedPackage::get_ser_size() const
	{
		return 0 + DataStream::get_varuint_size(mod_atom_pointer_cnt) + DataStream::get_varuint_size(del_cnt) + DataStream::get_varuint_size(new_roots_cnt) + DataStream::get_varuint_size(inserts_cnt);
	}

	VarUint QSExecutionFinishedPackage::get_val_mod_atom_pointer_cnt() const
	{
		return mod_atom_pointer_cnt;
	}
	VarUint QSExecutionFinishedPackage::get_val_del_cnt() const
	{
		return del_cnt;
	}
	VarUint QSExecutionFinishedPackage::get_val_new_roots_cnt() const
	{
		return new_roots_cnt;
	}
	VarUint QSExecutionFinishedPackage::get_val_inserts_cnt() const
	{
		return inserts_cnt;
	}
}
