/* This file is generated by lw_protogen. DO NOT EDIT.*/
#include <string>
#include <sstream>
#include <Protocol/Enums/DataPackages.h>
#include <Protocol/DataPackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/PackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/Packages/VScSendvaluesPackage.h>

using namespace std;

namespace Protocol {
	VScSendvaluesPackage::VScSendvaluesPackage(const sigset_t &mask, const bool &cancel, size_t &length, DataStream &stream):

		rootValueId(stream.read_varuint(mask, cancel, length)),
		oBundlesCount(stream.read_varuint(mask, cancel, length)),
		oBidCount(stream.read_varuint(mask, cancel, length)),
		pVidCount(stream.read_varuint(mask, cancel, length))
	{
	}

	VScSendvaluesPackage::VScSendvaluesPackage(VarUint rootValueId, VarUint oBundlesCount, VarUint oBidCount, VarUint pVidCount):

		rootValueId(rootValueId),
		oBundlesCount(oBundlesCount),
		oBidCount(oBidCount),
		pVidCount(pVidCount)
	{
	}

	void VScSendvaluesPackage::serialize(const sigset_t &mask, const bool& cancel, DataStream &stream, bool with_header) const
	{
		if (with_header){
			stream.write_uint8(mask, cancel, get_type());
			stream.write_uint32(mask, cancel, get_ser_size());
		}
		stream.write_varuint(mask, cancel, rootValueId);
		stream.write_varuint(mask, cancel, oBundlesCount);
		stream.write_varuint(mask, cancel, oBidCount);
		stream.write_varuint(mask, cancel, pVidCount);
	}

	uint8_t VScSendvaluesPackage::get_type() const
	{
		return V_SC_SENDVALUES_PACKAGE;
	}

	string VScSendvaluesPackage::to_string() const
	{
		stringstream ss;
		ss << "VScSendvaluesPackage:" << endl;
		ss << "  rootValueId: " << (rootValueId.is_null()?0:rootValueId.get_val()) << endl;
		ss << "  oBundlesCount: " << (oBundlesCount.is_null()?0:oBundlesCount.get_val()) << endl;
		ss << "  oBidCount: " << (oBidCount.is_null()?0:oBidCount.get_val()) << endl;
		ss << "  pVidCount: " << (pVidCount.is_null()?0:pVidCount.get_val()) << endl;
		return ss.str();
	}

	size_t VScSendvaluesPackage::get_ser_size() const
	{
		return 0 + DataStream::get_varuint_size(rootValueId) + DataStream::get_varuint_size(oBundlesCount) + DataStream::get_varuint_size(oBidCount) + DataStream::get_varuint_size(pVidCount);
	}

	VarUint VScSendvaluesPackage::get_val_rootValueId() const
	{
		return rootValueId;
	}
	VarUint VScSendvaluesPackage::get_val_oBundlesCount() const
	{
		return oBundlesCount;
	}
	VarUint VScSendvaluesPackage::get_val_oBidCount() const
	{
		return oBidCount;
	}
	VarUint VScSendvaluesPackage::get_val_pVidCount() const
	{
		return pVidCount;
	}
}
