/* This file is generated by lw_protogen. DO NOT EDIT.*/
#include <string>
#include <sstream>
#include <Protocol/Enums/DataPackages.h>
#include <Protocol/DataPackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/PackageFactory.h>
#include <Protocol/Enums/Packages.h>
#include <Protocol/Packages/WCLoginPackage.h>

using namespace std;

namespace Protocol {
	WCLoginPackage::WCLoginPackage(const sigset_t &mask, const bool &cancel, size_t &length, DataStream &stream):

		auth_method(stream.read_uint64(mask, cancel, length))
	{
	}

	WCLoginPackage::WCLoginPackage(uint64_t auth_method):

		auth_method(auth_method)
	{
	}

	void WCLoginPackage::serialize(const sigset_t &mask, const bool& cancel, DataStream &stream, bool with_header) const
	{
		if (with_header){
			stream.write_uint8(mask, cancel, get_type());
			stream.write_uint32(mask, cancel, get_ser_size());
		}
		stream.write_uint64(mask, cancel, auth_method);
	}

	uint8_t WCLoginPackage::get_type() const
	{
		return W_C_LOGIN_PACKAGE;
	}

	string WCLoginPackage::to_string() const
	{
		stringstream ss;
		ss << "WCLoginPackage:" << endl;
		ss << "  auth_method: " << auth_method << endl;
		return ss.str();
	}

	size_t WCLoginPackage::get_ser_size() const
	{
		return 0 + 8;
	}

	uint64_t WCLoginPackage::get_val_auth_method() const
	{
		return auth_method;
	}
}
