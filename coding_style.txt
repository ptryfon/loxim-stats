Tak powinny wygl±daæ pliki nag³ówkowe:

#ifndef _NAZWA_H
#define _NAZWA_H
zawarto¶æ pliku nag³ówkowego
#endif
-------------------------------------------------------

Rozszerzenia plików:

.cpp - ¼ród³a
.h   - nag³ówki
-------------------------------------------------------

Ka¿dy cvs commit musi byæ opisany
-------------------------------------------------------

Ka¿dy modu³ powinien u¿ywaæ swojego namespace
-------------------------------------------------------

Formatowanie kodu:

- wciêcia robiæ pojedynczym Tab'em
- nazwa pliku z du¿ej litery
- nazwy klas z du¿ej litery 
- nazwy funkcji z ma³ej litery

Przyk³adowy kod:

namespace Store
{
	DataValue::DataType DBDataValue::getType()
	{
		return DataValue::Integer;
	};

	void DBDataValue::toByteArray(unsigned char** lid, int* length)
	{
	};
}

-------------------------------------------------------
1. Obiekty przekazujemy do funkcji przez wskaznik. 
2. Referencji uzywamy tylko w dwoch przypadkach:
  a) przy zwracaniu wartosci atomowej: int&, char& etc.
  b) przy zwracaniu wskaznika do obiektu tworzonego wewnatrz procedury,
      przyklad (z QueryParser):

       int parseIt (string s, QueryTree *&qTrees);

     Ta metoda tworzy obiekt QueryTree i przekazuje do niego wskaznik.

3. Nie uzywamy char*, ale string.
-------------------------------------------------------
