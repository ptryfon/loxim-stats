#!/bin/bash

#result name - name for output file generated by tools
#output name - name for output file generated by loxim server

#T - test type (corr, heap, heapPr, leaks, leaksPr, ) default corr
#A - all tests, run tests defined in file all.txt (for simple or advanced)
#c - test class simple or advanced (default simple)
#n - test file name (not working if A option is valid)
#t - timeout, default 60 + 20 seconds for server to start
#o - custom result file
#r - custom result file
#O - addtional parameters that are going to passed to testing program execution (use on your own risk)
#p - custom test path (you have to provide full test path), you should you one of possibilities 
#			1. define test type and test file name (custom result file or custom output file are allowed)
#			2. define custom test path and custom result file and custom output file  
#				(custom result file and custom output file are  necessary)
#m - mode, default slash

source "$LOXIM_HOME/Testing/scripts/library.sh"

#GLOBAL VARIABLES
defaultDelay=60
serverDelay=20
let "timeout=$serverDelay + $defaultDelay"
testClass="simple"
allTests=false
testType=""
testPath="$LOXIM_HOME/Testing/tests"
testName=""
resultPath="$LOXIM_HOME/Testing/results"
outputPath="$LOXIM_HOME/Testing/outputs"
resultCurrPath=""
outputCurrPath=""
mode="slash"
customTestPath=""
customParameters="";
loximServerPid="0"
answerPath=""

#parsing parameters
generateRunNumber() {
	if [ -e $LOXIM_HOME/Testing/scripts/runNumber.txt ]; then

		runNumber=`cat $LOXIM_HOME/Testing/scripts/runNumber.txt`
		runNumber=$((runNumber + 1))
	else
		runNumber=1
	fi
	echo $runNumber > $LOXIM_HOME/Testing/scripts/runNumber.txt
}

set -- `getopt t:An:T:c:o:m: $*`

for i
do
	case "$i"
		in
		-t) shift; let timeout=$1+$serverDelay;  shift;;
		-c) shift; if [ "$1" =  "advanced" ]; then 
									testClass="advanced"
							 fi; shift;;
		-A) shift; allTests=true;;
		-T) shift;
				case "$1" in
					heap) testType="heap"; resultPath=$resultPath"/heap"; outputPath=$outputPath"/heap";;
					heapPr) testType="heapPr"; resultPath=$resultPath"/heap"; outputPath=$outputPath"/heap";;
					leaks) testType="leaks"; resultPath=$resultPath"/memoryLeaks"; outputPath=$outputPath"/memoryLeaks";;
					leaksPr) testType="leaksPr"; resultPath=$resultPath"/memoryLeaks"; outputPath=$outputPath"/memoryLeaks";;
					corr) testType="corr"; resultPath=$resultPath"/correctness"; outputPath=$outputPath"/correctness";;
					hel) testType="hel"; resultPath=$resultPath"/threadsProblems"; outputPath=$outputPath"/threadsProblems";;
					drd) testType="drd"; resultPath=$resultPath"/threadsProblems"; outputPath=$outputPath"/threadsProblems";;
					*) echo "you set wrong test type, exiting"; exit 1;;
				esac; shift;;
		-n) shift; testName=$1; shift;; 
		-r) shift; resultPath=$1; shift;;
		-m) shift; if [ "$1" = "dot" ]; then
									mode="dot"
							 fi; shift;;
		-p) shift; customTestPath=$1; shift;;
		-O) shift; customParameters=$1; shift;;
		-o) shift; outputPath=$1; shift;;
		--) shift; break;;
	esac
done

#setting default varialbles if there is need
if [ "$testType" = "" ]; then
	testType="corr"
	resultPath=$resultPath"/correctness"
	outputPath=$outputPath"/correctness"		
fi

if [ "$customTestPath" != "" ]; then
	testPath=$customTestPath
fi

if [ $testClass = "advanced" ]; then
	testPath=$testPath"/advancedTests/"
else 
	testPath=$testPath"/simpleTests/"
fi

if [ "$testName" != "" ]; then
	testPath=$testPath$testName 
fi

# running test
generateRunNumber
findLoximConfig
findLoximStoreObjects
removeLoximStoreObjects
makeTest

#echo "################################################################################" 
#echo "################### DEBUG OUTPUT ###############################################" 
#echo mode $mode
#echo timeout $timeout
#echo test class $testClass
#echo all test $allTests
#echo test type $testType
#echo test path $testPath
#echo test name $testName
#echo outout path $resultPath
#echo tablica ${#loximStoreFiles[@]} ${loximStoreFiles[@]}
#echo "################### END OF DEBUG OUTPUT ########################################" 
